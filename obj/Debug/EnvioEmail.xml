<?xml version="1.0"?>
<doc>
<assembly>
<name>
EnvioEmail
</name>
</assembly>
<members>
<member name="P:EnvioEmail.My.Resources.Resources.ResourceManager">
	<summary>
  Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
</summary>
</member><member name="P:EnvioEmail.My.Resources.Resources.Culture">
	<summary>
  Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
  búsquedas de recursos mediante esta clase de recurso fuertemente tipado.
</summary>
</member><member name="T:EnvioEmail.My.Resources.Resources">
	<summary>
  Clase de recurso fuertemente tipado, para buscar cadenas traducidas, etc.
</summary>
</member><member name="M:EnvioEmail.frmPrincipal.btnDirecciones_Click(System.Object,System.EventArgs)">
	<summary>
 Abrir y cargar en el listview las direcciones
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="P:EnvioEmail.IniFile.Text(System.Boolean)">
 -----------------------------------------------------------------------------
 <summary>
 Returns the contents of the IniFile in a text or HTML format
 </summary>
	<param name="ReturnAsHTML">Optional, defaults to false. Carriage return/linefeeds are converted to HTML.</param>
	<value></value>
	<remarks>
	</remarks>
	<history>
 	[TDavis]	1/19/2004	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:EnvioEmail.IniFile.#ctor(System.String,System.Boolean)">
 -----------------------------------------------------------------------------
 <summary>
 Contructor called when creating a new IniFile. Requires a filename value.
 </summary>
	<param name="FileName">The path to the file to be edited.</param>
	<param name="CreateIfNotExist">Optional, defaults to true. If the file does not exist, it is created.</param>
	<remarks>
	</remarks>
	<history>
 	[TDavis]	1/19/2004	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:EnvioEmail.IniFile.AddKey(System.String,System.String,System.String,System.Boolean,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Adds a key/value to a given section. If the section does not exist, it is created.
 </summary>
	<param name="KeyName">The name of the key to add. If the key alreadys exists, then no action is taken.</param>
	<param name="KeyValue">The value to assign to the new key.</param>
	<param name="SectionName">The section to add the new key to. If it does not exist, it is created.</param>
	<param name="IsCommented">Optional, defaults to false. Will create the key in commented state.</param>
	<param name="InsertBefore">Optional. Will insert the new key prior to the specified key.</param>
	<returns></returns>
	<remarks>If the section does not exist, it will be created. If the 'IsCommented' option is true, then the newly created section will also be commented. If the 'InsertBefore' option is used, the specified key does not exist, then the new key is simply added to the section. If the section the key is being added to is commented, then the key will be commented as well.
 </remarks>
	<history>
 	[TDavis]	1/19/2004	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:EnvioEmail.IniFile.AddSection(System.String,System.Boolean)">
 -----------------------------------------------------------------------------
 <summary>
 Adds a section to the IniFile. If the section already exists, then no action is taken.
 </summary>
	<param name="SectionName">The name of the section to add.</param>
	<param name="IsCommented">Optional, defaults to false. Will add the section in a commented state.</param>
	<remarks>
	</remarks>
	<history>
 	[TDavis]	1/19/2004	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:EnvioEmail.IniFile.GetSections">
 -----------------------------------------------------------------------------
 <summary>
 Return the sections in the IniFile.
 </summary>
	<returns>Returns an ArrayList of Section objects.</returns>
	<remarks>
	</remarks>
	<history>
 	[TDavis]	1/19/2004	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:EnvioEmail.IniFile.GetKeys(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Returns an arraylist of Key objects in a given Section. Section must exist.
 </summary>
	<param name="SectionName">The name of the Section to retrieve the keys from.</param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[TDavis]	1/19/2004	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:EnvioEmail.IniFile.CommentSection(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Comments a given section, including all of the keys contained in the section.
 </summary>
	<param name="SectionName">The name of the Section to comment.</param>
	<returns></returns>
	<remarks>Keys that are already commented will <b>not</b> preserve their comment status if 'UnCommentSection' is used later on.
 </remarks>
	<history>
 	[TDavis]	1/19/2004	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:EnvioEmail.IniFile.UnCommentSection(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Uncomments a given section, and all of its keys.
 </summary>
	<param name="SectionName">The name of the Section to uncomment.</param>
	<returns></returns>
	<remarks>Any keys in the section that were previously commented will be uncommented after this function.
 </remarks>
	<history>
 	[TDavis]	1/19/2004	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:EnvioEmail.IniFile.CommentKey(System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Comments a given key in a given section. Both the key and the section must exist. 
 </summary>
	<param name="KeyName">The name of the key to comment.</param>
	<param name="SectionName">The name of the section the key is in.</param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[TDavis]	1/19/2004	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:EnvioEmail.IniFile.UnCommentKey(System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Uncomments a given key in a given section. Both the key and section must exist.
 </summary>
	<param name="KeyName">The name of the key to uncomment.</param>
	<param name="SectionName">The name of the section the key is in.</param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[TDavis]	1/19/2004	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:EnvioEmail.IniFile.RenameSection(System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Renames a section. The section must exist.
 </summary>
	<param name="SectionName">The name of the section to be renamed.</param>
	<param name="NewSectionName">The new name of the section.</param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[TDavis]	1/19/2004	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:EnvioEmail.IniFile.RenameKey(System.String,System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Renames a given key key in a given section. Both they key and the section must exist. The value is not altered.
 </summary>
	<param name="KeyName">The name of the key to be renamed.</param>
	<param name="SectionName">The name of the section the key exists in.</param>
	<param name="NewKeyName">The new name of the key.</param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[TDavis]	1/19/2004	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:EnvioEmail.IniFile.ChangeValue(System.String,System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Changes the value of a given key in a given section. Both the key and the section must exist.
 </summary>
	<param name="KeyName">The name of the key whose value should be changed.</param>
	<param name="SectionName">The name of the section the key exists in.</param>
	<param name="NewValue">The new value to assign to the key.</param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[TDavis]	1/19/2004	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:EnvioEmail.IniFile.DeleteSection(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Deletes a given section. The section must exist. All the keys in the section will also be deleted.
 </summary>
	<param name="SectionName">The name of the section to be deleted.</param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[TDavis]	1/19/2004	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:EnvioEmail.IniFile.DeleteKey(System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Deletes a given key in a given section. Both the key and the section must exist.
 </summary>
	<param name="KeyName">The name of the key to be deleted.</param>
	<param name="SectionName">The name of the section the key exists in.</param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[TDavis]	1/19/2004	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:EnvioEmail.IniFile.MoveKey(System.String,System.String,System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Moves a key from one section to another. Both the key and the section must exist, as must the section to move the key to.
 </summary>
	<param name="KeyName">The name of the key to be moved.</param>
	<param name="SectionName">The name of the section the key exists in.</param>
	<param name="NewSectionName">The name of the section to move the key to.</param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[TDavis]	1/19/2004	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:EnvioEmail.IniFile.Sort">
 -----------------------------------------------------------------------------
 <summary>
 Sorts all of the sections, and all of the keys within the sections.
 </summary>
	<returns></returns>
	<remarks>There is no undo feature for this operation.
 </remarks>
	<history>
 	[TDavis]	1/19/2004	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:EnvioEmail.IniFile.Save(System.String)">
 -----------------------------------------------------------------------------
 <summary>
 Saves the IniFile to the specified filename.
 </summary>
	<param name="FileName">The filename to save the inifile to.</param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[TDavis]	1/19/2004	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:EnvioEmail.IniFile.SaveXML(System.String,System.Text.Encoding)">
 -----------------------------------------------------------------------------
 <summary>
 Saves the inifile to the specified filename in XML format. 
 </summary>
	<param name="FileName">The name of the file to save the inifile to.</param>
	<param name="Encode">Optional, defaults to nothing. May pass an encoding object (such as UTF-8) here.</param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[TDavis]	1/19/2004	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:EnvioEmail.IniFile.GetFormSettings(System.Windows.Forms.Form@)">
 -----------------------------------------------------------------------------
 <summary>
 Retrieves the stored values of a form previously saved with funciton SaveFormSettings
 </summary>
	<param name="WinForm">The form object to restore the values to.</param>
	<returns></returns>
	<remarks>
	</remarks>
	<history>
 	[TDavis]	1/19/2004	Created
 </history>
 -----------------------------------------------------------------------------

</member><member name="M:EnvioEmail.Logger.e(System.String,System.Diagnostics.StackFrame)">
	<summary>
 Error
 </summary>
	<param name="sMensaje"></param>
	<param name="objTraza"></param>
	<remarks></remarks>
</member><member name="M:EnvioEmail.Logger.w(System.String,System.Diagnostics.StackFrame)">
	<summary>
 Warning
 </summary>
	<param name="sMensaje"></param>
	<param name="objTraza"></param>
	<remarks></remarks>
</member><member name="M:EnvioEmail.Logger.i(System.String,System.Diagnostics.StackFrame)">
	<summary>
 Info
 </summary>
	<param name="sMensaje"></param>
	<param name="objTraza"></param>
	<remarks></remarks>
</member><member name="M:EnvioEmail.Logger.d(System.String,System.Diagnostics.StackFrame)">
	<summary>
 Debug
 </summary>
	<param name="sMensaje"></param>
	<param name="objTraza"></param>
	<remarks></remarks>
</member>
</members>
</doc>